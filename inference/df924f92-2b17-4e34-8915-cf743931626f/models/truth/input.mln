character = { Jimmy }
place = { Drawer }
object = { FoundCandy, Candy }
Hidden(object)
In(object, place)
Is(object, object)
Eat(character, object)
Guilty(character)
2.0 Hidden(FoundCandy) => In(FoundCandy, Drawer)
2.0 Hidden(Candy) => In(Candy, Drawer)
999.0 Is(FoundCandy, FoundCandy)
999.0 Is(Candy, Candy)
999.0 Is(FoundCandy, FoundCandy) <=> Is(FoundCandy, FoundCandy)
999.0 Is(FoundCandy, Candy) <=> Is(Candy, FoundCandy)
999.0 Is(Candy, FoundCandy) <=> Is(FoundCandy, Candy)
999.0 Is(Candy, Candy) <=> Is(Candy, Candy)
999.0 Is(FoundCandy, FoundCandy) ^ Is(FoundCandy, FoundCandy) => Is(FoundCandy, FoundCandy)
999.0 Is(FoundCandy, FoundCandy) ^ Is(FoundCandy, Candy) => Is(FoundCandy, Candy)
999.0 Is(FoundCandy, Candy) ^ Is(Candy, FoundCandy) => Is(FoundCandy, FoundCandy)
999.0 Is(FoundCandy, Candy) ^ Is(Candy, Candy) => Is(FoundCandy, Candy)
999.0 Is(Candy, FoundCandy) ^ Is(FoundCandy, FoundCandy) => Is(Candy, FoundCandy)
999.0 Is(Candy, FoundCandy) ^ Is(FoundCandy, Candy) => Is(Candy, Candy)
999.0 Is(Candy, Candy) ^ Is(Candy, FoundCandy) => Is(Candy, FoundCandy)
999.0 Is(Candy, Candy) ^ Is(Candy, Candy) => Is(Candy, Candy)
999.0 Is(FoundCandy, FoundCandy) => (In(FoundCandy, Drawer) <=> In(FoundCandy, Drawer))
999.0 Is(FoundCandy, Candy) => (In(FoundCandy, Drawer) <=> In(Candy, Drawer))
999.0 Is(Candy, FoundCandy) => (In(Candy, Drawer) <=> In(FoundCandy, Drawer))
999.0 Is(Candy, Candy) => (In(Candy, Drawer) <=> In(Candy, Drawer))
2.0 In(FoundCandy, Drawer) ^ In(FoundCandy, Drawer) => Is(FoundCandy, FoundCandy)
2.0 In(FoundCandy, Drawer) ^ In(Candy, Drawer) => Is(FoundCandy, Candy)
2.0 In(Candy, Drawer) ^ In(FoundCandy, Drawer) => Is(Candy, FoundCandy)
2.0 In(Candy, Drawer) ^ In(Candy, Drawer) => Is(Candy, Candy)
999.0 Hidden(Candy)
999.0 In(FoundCandy, Drawer)
999.0 Eat(Jimmy, FoundCandy)
999.0 Is(FoundCandy, Candy)
999.0 Guilty(Jimmy)