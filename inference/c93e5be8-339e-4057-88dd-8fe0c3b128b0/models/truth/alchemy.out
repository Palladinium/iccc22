----------------- parameters ----------------
-i = /home/patrick/projects/phd/experiments/experiment-1/scripts/../inference/c93e5be8-339e-4057-88dd-8fe0c3b128b0/models/full/input.mln
-cw = 
-ow = 
-queryEvidence = 0
-m = 0
-a = 0
-p = 0
-ms = 0
-bp = 0
-efbp = 0
-decision = 0
-simtp = 0
-outputNetwork = 0
-counts = 0
-seed = -1
-lazy = 0
-lazyNoApprox = 0
-memLimit = -1
-PrintSamplePerIteration = 0
-SAInterval = 100
-MaxSeconds = 
-SATempDownRatio = 0.9
-SA = 0
-hybrid = 0
-propstdev = tmp.sd
-contSamples = 
-mwsMaxSteps = 1000000
-tries = 1
-targetWt = 0
-breakHardClauses = 0
-heuristic = 2
-tabuLength = 10
-lazyLowState = 0
-burnMinSteps = 100
-burnMaxSteps = 100
-minSteps = 2000
-maxSteps = 2000
-maxSeconds = -1
-subInterval = 2
-numRuns = 3
-numSwap = 10
-lifted = 0
-useHC = 0
-useCT = 0
-convThresh = 0.0001
-convIterations = 20
-explicitRep = 0
-hcCreateType = 0
-hcCreateNoise = 0
-lncIter = 0
-noHC = 
-numSolutions = 10
-saRatio = 50
-saTemperature = 80
-lateSa = 1
-numChains = 10
-delta = 0.05
-epsilonError = 0.01
-fracConverged = 0.95
-walksatType = 1
-testConvergence = 0
-samplesPerTest = 100
-e = /home/patrick/projects/phd/experiments/experiment-1/scripts/../inference/c93e5be8-339e-4057-88dd-8fe0c3b128b0/models/full/input.db
-r = /home/patrick/projects/phd/experiments/experiment-1/scripts/../inference/c93e5be8-339e-4057-88dd-8fe0c3b128b0/models/full/output.result
-q = 
-f = /home/patrick/projects/phd/experiments/experiment-1/scripts/../inference/c93e5be8-339e-4057-88dd-8fe0c3b128b0/models/full/query.db
----------------- end of parameters ----------------
Reading formulas and evidence predicates...
input.mln28889_tmpalchemy.mln
Adding clauses to MLN...
converting to CNF:
formula 0: Student(George)
clause 0: Student(George)
CNF conversion took 0 secs
formula 1: Student(George) ^ InClass(George,LastNight) ^ FallAsleep(George,LastNight) => InTrouble(George,LastNight)
clause 0: !Student(George) v !FallAsleep(George,LastNight) v !InClass(George,LastNight) v InTrouble(George,LastNight)
CNF conversion took 0 secs
formula 2: Student(George) ^ InClass(George,Class) ^ FallAsleep(George,Class) => InTrouble(George,Class)
clause 0: !Student(George) v !FallAsleep(George,Class) v !InClass(George,Class) v InTrouble(George,Class)
CNF conversion took 0 secs
formula 3: Student(George) ^ InClass(George,Class2) ^ FallAsleep(George,Class2) => InTrouble(George,Class2)
clause 0: !Student(George) v !FallAsleep(George,Class2) v !InClass(George,Class2) v InTrouble(George,Class2)
CNF conversion took 0 secs
formula 4: Student(George) ^ InClass(George,Afternoon) ^ FallAsleep(George,Afternoon) => InTrouble(George,Afternoon)
clause 0: !Student(George) v !FallAsleep(George,Afternoon) v !InClass(George,Afternoon) v InTrouble(George,Afternoon)
CNF conversion took 0 secs
formula 5: Student(George) ^ InClass(George,Afternoon2) ^ FallAsleep(George,Afternoon2) => InTrouble(George,Afternoon2)
clause 0: !Student(George) v !FallAsleep(George,Afternoon2) v !InClass(George,Afternoon2) v InTrouble(George,Afternoon2)
CNF conversion took 0 secs
formula 6: Student(Teacher) ^ InClass(Teacher,LastNight) ^ FallAsleep(Teacher,LastNight) => InTrouble(Teacher,LastNight)
clause 0: !Student(Teacher) v !FallAsleep(Teacher,LastNight) v !InClass(Teacher,LastNight) v InTrouble(Teacher,LastNight)
CNF conversion took 0 secs
formula 7: Student(Teacher) ^ InClass(Teacher,Class) ^ FallAsleep(Teacher,Class) => InTrouble(Teacher,Class)
clause 0: !Student(Teacher) v !FallAsleep(Teacher,Class) v !InClass(Teacher,Class) v InTrouble(Teacher,Class)
CNF conversion took 0 secs
formula 8: Student(Teacher) ^ InClass(Teacher,Class2) ^ FallAsleep(Teacher,Class2) => InTrouble(Teacher,Class2)
clause 0: !Student(Teacher) v !FallAsleep(Teacher,Class2) v !InClass(Teacher,Class2) v InTrouble(Teacher,Class2)
CNF conversion took 0 secs
formula 9: Student(Teacher) ^ InClass(Teacher,Afternoon) ^ FallAsleep(Teacher,Afternoon) => InTrouble(Teacher,Afternoon)
clause 0: !Student(Teacher) v !FallAsleep(Teacher,Afternoon) v !InClass(Teacher,Afternoon) v InTrouble(Teacher,Afternoon)
CNF conversion took 0 secs
formula 10: Student(Teacher) ^ InClass(Teacher,Afternoon2) ^ FallAsleep(Teacher,Afternoon2) => InTrouble(Teacher,Afternoon2)
clause 0: !Student(Teacher) v !FallAsleep(Teacher,Afternoon2) v !InClass(Teacher,Afternoon2) v InTrouble(Teacher,Afternoon2)
CNF conversion took 0 secs
formula 11: At(George,School,Class)
clause 0: At(George,School,Class)
CNF conversion took 0 secs
formula 12: Exam(Afternoon)
clause 0: Exam(Afternoon)
CNF conversion took 0 secs
formula 13: Study(George,LastNight)
clause 0: Study(George,LastNight)
CNF conversion took 0 secs
formula 14: FallAsleep(George,Class)
clause 0: FallAsleep(George,Class)
CNF conversion took 0 secs
formula 15: WakeUp(George,Class2)
clause 0: WakeUp(George,Class2)
CNF conversion took 0 secs
formula 16: InTrouble(George,Class2)
clause 0: InTrouble(George,Class2)
CNF conversion took 0 secs
formula 17: Detention(George,Afternoon2)
clause 0: Detention(George,Afternoon2)
CNF conversion took 0 secs
BEGIN CNF CONVERSION RESULT
formula 0 idx 0: 999 Student(George)
formula 1 idx 0: 999 !Student(George) v !FallAsleep(George,LastNight) v !InClass(George,LastNight) v InTrouble(George,LastNight)
formula 2 idx 0: 999 !Student(George) v !FallAsleep(George,Class) v !InClass(George,Class) v InTrouble(George,Class)
formula 3 idx 0: 999 !Student(George) v !FallAsleep(George,Class2) v !InClass(George,Class2) v InTrouble(George,Class2)
formula 4 idx 0: 999 !Student(George) v !FallAsleep(George,Afternoon) v !InClass(George,Afternoon) v InTrouble(George,Afternoon)
formula 5 idx 0: 999 !Student(George) v !FallAsleep(George,Afternoon2) v !InClass(George,Afternoon2) v InTrouble(George,Afternoon2)
formula 6 idx 0: 999 !Student(Teacher) v !FallAsleep(Teacher,LastNight) v !InClass(Teacher,LastNight) v InTrouble(Teacher,LastNight)
formula 7 idx 0: 999 !Student(Teacher) v !FallAsleep(Teacher,Class) v !InClass(Teacher,Class) v InTrouble(Teacher,Class)
formula 8 idx 0: 999 !Student(Teacher) v !FallAsleep(Teacher,Class2) v !InClass(Teacher,Class2) v InTrouble(Teacher,Class2)
formula 9 idx 0: 999 !Student(Teacher) v !FallAsleep(Teacher,Afternoon) v !InClass(Teacher,Afternoon) v InTrouble(Teacher,Afternoon)
formula 10 idx 0: 999 !Student(Teacher) v !FallAsleep(Teacher,Afternoon2) v !InClass(Teacher,Afternoon2) v InTrouble(Teacher,Afternoon2)
formula 11 idx 0: 999 At(George,School,Class)
formula 12 idx 0: 999 Exam(Afternoon)
formula 13 idx 0: 999 Study(George,LastNight)
formula 14 idx 0: 999 FallAsleep(George,Class)
formula 15 idx 0: 999 WakeUp(George,Class2)
formula 16 idx 0: 999 InTrouble(George,Class2)
formula 17 idx 0: 999 Detention(George,Afternoon2)
END CNF CONVERSION RESULT
Reading query predicates that are specified in query file...
At(George,School,LastNight)
At(George,School,Class)
At(George,School,Class2)
At(George,School,Afternoon)
At(George,School,Afternoon2)
At(Teacher,School,LastNight)
At(Teacher,School,Class)
At(Teacher,School,Class2)
At(Teacher,School,Afternoon)
At(Teacher,School,Afternoon2)
Study(George,LastNight)
Study(George,Class)
Study(George,Class2)
Study(George,Afternoon)
Study(George,Afternoon2)
Study(Teacher,LastNight)
Study(Teacher,Class)
Study(Teacher,Class2)
Study(Teacher,Afternoon)
Study(Teacher,Afternoon2)
WakeUp(George,LastNight)
WakeUp(George,Class)
WakeUp(George,Class2)
WakeUp(George,Afternoon)
WakeUp(George,Afternoon2)
WakeUp(Teacher,LastNight)
WakeUp(Teacher,Class)
WakeUp(Teacher,Class2)
WakeUp(Teacher,Afternoon)
WakeUp(Teacher,Afternoon2)
Student(George)
Student(Teacher)
Exam(LastNight)
Exam(Class)
Exam(Class2)
Exam(Afternoon)
Exam(Afternoon2)
FallAsleep(George,LastNight)
FallAsleep(George,Class)
FallAsleep(George,Class2)
FallAsleep(George,Afternoon)
FallAsleep(George,Afternoon2)
FallAsleep(Teacher,LastNight)
FallAsleep(Teacher,Class)
FallAsleep(Teacher,Class2)
FallAsleep(Teacher,Afternoon)
FallAsleep(Teacher,Afternoon2)
InClass(George,LastNight)
InClass(George,Class)
InClass(George,Class2)
InClass(George,Afternoon)
InClass(George,Afternoon2)
InClass(Teacher,LastNight)
InClass(Teacher,Class)
InClass(Teacher,Class2)
InClass(Teacher,Afternoon)
InClass(Teacher,Afternoon2)
InTrouble(George,LastNight)
InTrouble(George,Class)
InTrouble(George,Class2)
InTrouble(George,Afternoon)
InTrouble(George,Afternoon2)
InTrouble(Teacher,LastNight)
InTrouble(Teacher,Class)
InTrouble(Teacher,Class2)
InTrouble(Teacher,Afternoon)
InTrouble(Teacher,Afternoon2)
Detention(George,LastNight)
Detention(George,Class)
Detention(George,Class2)
Detention(George,Afternoon)
Detention(George,Afternoon2)
Detention(Teacher,LastNight)
Detention(Teacher,Class)
Detention(Teacher,Class2)
Detention(Teacher,Afternoon)
Detention(Teacher,Afternoon2)
Set hard weight to 17992
creating mrf...
number of grounded predicates = 77
number of grounded clauses = 18
Time taken to construct MRF = 0 secs
[VS] 0 secs
>>> DONE: Initial num. of clauses: 18
Initializing MC-SAT with MaxWalksat on hard clauses...
Running MC-SAT sampling...
Sample (per pred) 100, time elapsed = 0.01 secs, num. preds = 77, num. clauses = 18
Done burning. 100 samples.
Sample (per pred) 100, time elapsed = 0.02 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 200, time elapsed = 0.03 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 300, time elapsed = 0.04 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 400, time elapsed = 0.05 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 500, time elapsed = 0.06 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 600, time elapsed = 0.07 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 700, time elapsed = 0.08 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 800, time elapsed = 0.09 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 900, time elapsed = 0.1 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 1000, time elapsed = 0.11 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 1100, time elapsed = 0.12 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 1200, time elapsed = 0.13 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 1300, time elapsed = 0.14 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 1400, time elapsed = 0.15 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 1500, time elapsed = 0.16 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 1600, time elapsed = 0.17 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 1700, time elapsed = 0.18 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 1800, time elapsed = 0.19 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 1900, time elapsed = 0.2 secs, num. preds = 77, num. clauses = 18
Sample (per pred) 2000, time elapsed = 0.21 secs, num. preds = 77, num. clauses = 18
Done MC-SAT sampling. 2000 samples.
Final ground predicate number: 77
Final ground clause number: 18
Time taken for MC-SAT sampling = 0.21 secs
Time taken for SampleSat = 0.17 secs
Time-Results: Init 0 Run 0.21 Total 0.21
BEGIN CLAUSE TRUE COUNTS
clause 0: 2000 / 2000 (1 groundings) 999 Student(George)
clause 1: 2000 / 2000 (1 groundings) 999 !Student(George) v !FallAsleep(George,LastNight) v !InClass(George,LastNight) v InTrouble(George,LastNight)
clause 2: 2000 / 2000 (1 groundings) 999 !Student(George) v !FallAsleep(George,Class) v !InClass(George,Class) v InTrouble(George,Class)
clause 3: 2000 / 2000 (1 groundings) 999 !Student(George) v !FallAsleep(George,Class2) v !InClass(George,Class2) v InTrouble(George,Class2)
clause 4: 2000 / 2000 (1 groundings) 999 !Student(George) v !FallAsleep(George,Afternoon) v !InClass(George,Afternoon) v InTrouble(George,Afternoon)
clause 5: 2000 / 2000 (1 groundings) 999 !Student(George) v !FallAsleep(George,Afternoon2) v !InClass(George,Afternoon2) v InTrouble(George,Afternoon2)
clause 6: 2000 / 2000 (1 groundings) 999 !Student(Teacher) v !FallAsleep(Teacher,LastNight) v !InClass(Teacher,LastNight) v InTrouble(Teacher,LastNight)
clause 7: 2000 / 2000 (1 groundings) 999 !Student(Teacher) v !FallAsleep(Teacher,Class) v !InClass(Teacher,Class) v InTrouble(Teacher,Class)
clause 8: 2000 / 2000 (1 groundings) 999 !Student(Teacher) v !FallAsleep(Teacher,Class2) v !InClass(Teacher,Class2) v InTrouble(Teacher,Class2)
clause 9: 2000 / 2000 (1 groundings) 999 !Student(Teacher) v !FallAsleep(Teacher,Afternoon) v !InClass(Teacher,Afternoon) v InTrouble(Teacher,Afternoon)
clause 10: 2000 / 2000 (1 groundings) 999 !Student(Teacher) v !FallAsleep(Teacher,Afternoon2) v !InClass(Teacher,Afternoon2) v InTrouble(Teacher,Afternoon2)
clause 11: 2000 / 2000 (1 groundings) 999 At(George,School,Class)
clause 12: 2000 / 2000 (1 groundings) 999 Exam(Afternoon)
clause 13: 2000 / 2000 (1 groundings) 999 Study(George,LastNight)
clause 14: 2000 / 2000 (1 groundings) 999 FallAsleep(George,Class)
clause 15: 2000 / 2000 (1 groundings) 999 WakeUp(George,Class2)
clause 16: 2000 / 2000 (1 groundings) 999 InTrouble(George,Class2)
clause 17: 2000 / 2000 (1 groundings) 999 Detention(George,Afternoon2)
END CLAUSE TRUE COUNTS
total time taken = 0.21 secs
